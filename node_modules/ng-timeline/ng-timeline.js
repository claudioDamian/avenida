import { Component, Input, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { BrowserAnimationsModule } from '@angular/platform-browser/animations';
import { animate, keyframes, query, stagger, style, transition, trigger } from '@angular/animations';

class TimelineEntry {
}

class TimelineEntryBuilder {
    constructor() {
        this._timelineEntry = new TimelineEntry();
    }
    /**
     * @param {?} title
     * @return {?}
     */
    title(title) {
        this._timelineEntry.title = title;
        return this;
    }
    /**
     * @param {?} body
     * @return {?}
     */
    body(body) {
        this._timelineEntry.body = body;
        return this;
    }
    /**
     * @param {?} major
     * @return {?}
     */
    major(major) {
        this._timelineEntry.major = major;
        return this;
    }
    /**
     * @return {?}
     */
    build() {
        return this._timelineEntry;
    }
}

class NgTimelineComponent {
    constructor() { }
}
NgTimelineComponent.decorators = [
    { type: Component, args: [{
                selector: 'ng-timeline',
                template: `
    <div class="ng-timeline">
      <div class="ng-timeline-entries" [@.disabled]="!enableAnimation" [@timelineAnimation]="entries.length">
        <div class="ng-timeline-entry" *ngFor="let entry of entries; index as i">
          <div class="ng-timeline-title" [ngClass]="{'big': entry.major }" [innerHtml]="entry.title"></div>
          <div class="ng-timeline-body" [innerHtml]="entry.body"></div>
        </div>
      </div>
    </div>
  `,
                animations: [
                    trigger('timelineAnimation', [
                        transition('* => *', [
                            query(':enter', style({ opacity: 0 }), { optional: true }),
                            query(':enter', stagger('200ms', [
                                animate('1s ease-out', keyframes([
                                    style({ opacity: 0, transform: 'translateY(-75%)', offset: 0 }),
                                    style({ opacity: .5, transform: 'translateY(-25px)', offset: 0.5 }),
                                    style({ opacity: 1, transform: 'translateY(0)', offset: 1.0 }),
                                ]))
                            ]), { optional: true })
                        ])
                    ])
                ]
            },] },
];
/**
 * @nocollapse
 */
NgTimelineComponent.ctorParameters = () => [];
NgTimelineComponent.propDecorators = {
    'entries': [{ type: Input },],
    'enableAnimation': [{ type: Input },],
};

class NgTimelineModule {
}
NgTimelineModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule,
                    BrowserAnimationsModule
                ],
                declarations: [
                    NgTimelineComponent,
                ],
                exports: [
                    NgTimelineComponent,
                ]
            },] },
];
/**
 * @nocollapse
 */
NgTimelineModule.ctorParameters = () => [];

/**
 * Generated bundle index. Do not edit.
 */

export { TimelineEntry, TimelineEntryBuilder, NgTimelineModule, NgTimelineComponent as Éµa };
//# sourceMappingURL=ng-timeline.js.map
